@model EzCMS.Core.Models.NotificationTemplates.NotificationTemplateManageModel

@Html.HiddenFor(m => m.Id)
<div class="form-group">
    @Html.LocalizeLabelFor(m => m.Module, new { @class = "col-sm-2 control-label align-right" })
    <div class="col-sm-10 col-xs-12">
        @Html.DropDownListFor(m => m.Module, @Model.Modules, new { id = "notificationModule", @class = "col-sm-8 col-xs-10 no-padding" })
        @Html.HelpTextFor(m => m.Module, new { @class = "help-button" })
    </div>
</div>
<div class="form-group">
    @Html.LocalizeLabelFor(m => m.Name, new { @class = "col-sm-2 control-label align-right" })
    <div class="col-sm-10 col-xs-12">
        @Html.TextBoxFor(m => m.Name, new { @class = "col-sm-8 col-xs-10" })
        @Html.HelpTextFor(m => m.Name, new { @class = "help-button" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>
</div>
<div class="form-group">
    @Html.LocalizeLabelFor(m => m.Subject, new { @class = "col-sm-2 control-label align-right" })
    <div class="col-sm-10 col-xs-12">
        @Html.TextBoxFor(m => m.Subject, new { @class = "col-sm-8 col-xs-10" })
        @Html.HelpTextFor(m => m.Subject, new { @class = "help-button" })
        @Html.ValidationMessageFor(m => m.Subject)
    </div>
</div>
<div class="form-group">
    @Html.LocalizeLabelFor(m => m.Body, new { @class = "col-sm-2 control-label align-right" })
    <div class="col-xs-10">
        <div class="btn-group">
            <button class="btn btn-xs btn-info dropdown-toggle" data-toggle="dropdown">
                @T("Widget_Text_AddProperty")
                <span class="fa fa-angle-down icon-on-right bigger-110"></span>
            </button>
            <ul id="propertyBuilder" class="dropdown-menu dropdown-info"></ul>
        </div>
    </div>
    <div class="col-xs-12">
        <div class="col-sm-offset-2 col-xs-9 no-padding">
            @Html.TextAreaFor(m => m.Body, new { id = "NotificationBody", @class = "col-xs-12" })
        </div>
        @Html.HelpTextFor(m => m.Body, new { @class = "help-button" })
        @Html.ValidationMessageFor(m => m.Body)
    </div>
</div>
<div class="clearfix form-actions">
    @Html.Partial("Partials/_SubmitButtons", Model.Id.HasValue)
</div>

@{
    Script.Bundle("~/js/ckeditor").Block(@<script type="text/javascript">
        var ContentEditor;
        ContentEditor = buildCkEditor('Body', {
            toolbar: $.parseJSON('@Html.Action("BasicToolbar", "Home")')
        });

        $(function () {
            GeneratePropertyDropdown();
        });

        function GeneratePropertyDropdown() {
            siteHelper.httpPost({
                showLoading: false,
                type: "POST",
                url: "@Url.Action("GeneratePropertyDropdown")" + "?module=" + $("#notificationModule").val(),
                async: false,
                success: function (response) {
                    if (response.Success) {
                        $("#propertyBuilder").html(response.Data);
                    } else {
                        siteHelper.showMessage(response);
                    }
                }
            });
        }

        var callback = function printCurlybracket(text) {
            ContentEditor.insertText(text);
        };
    </script>);
}