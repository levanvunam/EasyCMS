@model EzCMS.Core.Models.Contacts.ContactSearchModel

@{
    ViewBag.Header = T("Contact_Site_Header");
    ViewBag.Title = T("Contact_Site_ListingTitle");
    ViewBag.Description = T("Contact_Site_ListingDescription");
}

@section styles{
    <link rel="stylesheet" href="@Url.Content("~/Scripts/Plugins/jqGrid/css/ui.jqgrid.min.css")" />
}

<div class="page-header">
    <h1>
        @ViewBag.Header
        <small>
            <i class="fa fa-angle-double-right"></i>
            @ViewBag.Title
        </small>
    </h1>
</div>

<div class="row form-horizontal">
    <div id="grid-buttons" class="col-xs-12">
        @ShowStatusMessage()
        @Html.Partial("Partials/_ContactSearch", Model)
        <div class="space-4 clearfix"></div>
        <a href="@Url.Action("Create")" class="btn btn-yellow btn-minier">
            <i class="fa fa-plus bigger-125"></i>
            @T("Contact_Text_Create")
        </a>
        @Html.EmptyPartial("Partials/_ExportButtons")
        <a id="btnAddToGroup" href="javascript:addToGroup()" class="btn btn-primary btn-minier">
            <i class="fa fa-user-plus align-top bigger-125"></i>
            @T("Contact_Text_AddToGroup")
        </a>
    </div>
    <div class="col-xs-12">
        <!-- PAGE CONTENT BEGINS -->

        <table id="grid-table"></table>

        <div id="grid-pager"></div>

        <!-- PAGE CONTENT ENDS -->
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/js/jqgrid")

    <script type="text/javascript">
        /*
         * Setup grid
         */
        var gridSelector = "#grid-table";
        var pagerSelector = "#grid-pager";
        var navButtonsSetup = {
            enableEdit: false,
            enableCreate: false,
            enableDelete: false,
            enableSearch: true,
            enableRefresh: true,
            enableView: true
        };
        var gridSettings = $.parseJSON('@Html.Action("GetGridSettings", "Account", new { name = "Contact" })');

        var gridOptions = {
            url: "@Url.Action("_AjaxBinding")",
            colNames: ['', '@T("Contact_Field_Id")',
                '@T("Contact_Field_UserId")',
                '@T("Contact_Field_FullName")',
                '@T("Contact_Field_Email")',
                '@T("Contact_Field_Title")',
                '@T("Contact_Field_BelongToUser")',
                '@T("Contact_Field_IsCompanyAdministrator")',
                '@T("Contact_Field_Company")',
                '@T("Contact_Field_FirstName")',
                '@T("Contact_Field_LastName")',
                '@T("Contact_Field_Department")',
                '@T("Contact_Field_AddressLine1")',
                '@T("Contact_Field_AddressLine2")',
                '@T("Contact_Field_Suburb")',
                '@T("Contact_Field_State")',
                '@T("Contact_Field_Postcode")',
                '@T("Contact_Field_Country")',
                '@T("Contact_Field_PostalAddressLine1")',
                '@T("Contact_Field_PostalAddressLine2")',
                '@T("Contact_Field_PostalSuburb")',
                '@T("Contact_Field_PostalState")',
                '@T("Contact_Field_PostalPostcode")',
                '@T("Contact_Field_PostalCountry")',
                '@T("Contact_Field_PreferredPhoneNumber")',
                '@T("Contact_Field_PhoneWork")',
                '@T("Contact_Field_PhoneHome")',
                '@T("Contact_Field_Fax")',
                '@T("Contact_Field_Occupation")',
                '@T("Contact_Field_Website")',
                '@T("Contact_Field_Sex")',
                '@T("Contact_Field_DateOfBirth")',
                '@T("Contact_Field_DontSendMarketing")',
                '@T("Contact_Field_Unsubscribed")',
                '@T("Contact_Field_UnsubscribeDateTime")',
                '@T("Contact_Field_SubscriptionType")',
                '@T("Contact_Field_Confirmed")',
                '@T("Contact_Field_ConfirmDateTime")',
                '@T("Contact_Field_FromIPAddress")',
                '@T("Contact_Field_ValidatedOk")',
                '@T("Contact_Field_ValidateLevel")',
                '@T("Contact_Field_CRMID")',
                '@T("Contact_Field_SalesPerson")',
                '@T("Contact_Field_UnsubscribedIssueId")',
                '@T("Contact_Field_Facebook")',
                '@T("Contact_Field_Twitter")',
                '@T("Contact_Field_LinkedIn")',
                '@T("Contact_Field_Active")',
                '@LabelForTime(T("Contact_Field_Created"))',
                '@T("Contact_Field_CreatedBy")',
                '@LabelForTime(T("Contact_Field_LastUpdate"))',
                '@T("Contact_Field_LastUpdateBy")'],
            colModel: [
                {
                    name: 'Actions',
                    hidedlg: true,
                    width: 90,
                    fixed: true,
                    sortable: false,
                    search: false,
                    align: "center",
                    formatter: function (cellvalue, options, rowObject) {
                        var editIcon = "<a class='grid-action' href='@Url.Action("Edit")/" + options.rowId + "'><div class='ui-pg-div' title='@T("System_Text_Edit")'><span class='fa fa-edit'></span></div></a>";
                        var detailsIcon = "<a class='grid-action' href='@Url.Action("Details")/" + options.rowId + "'><div class='ui-pg-div' title='@T("System_Text_ViewDetails")'><span class='fa fa-search-plus'></span></div></a>";
                        var deleteIcon = "<a class='grid-action' href='@Url.Action("Details")/" + options.rowId + "?action=delete'><div class='ui-pg-div'title='@T("System_Text_Delete")'><span class='fa fa-times red'></span></div></a>";

                        return editIcon + detailsIcon + deleteIcon;
                    }
                },
                { name: 'Id', index: 'Id', key: true, width: 80, fixed: true, align: 'center', sorttype: "int", searchoptions: { sopt: ['eq'] } },
                { name: 'UserId', index: 'UserId', hidden: true },
                { name: 'FullName', index: 'FullName', search: false },
                { name: 'Email', index: 'Email' },
                { name: 'Title', index: 'Title', hidden: true },
                {
                    name: 'BelongToUser',
                    index: 'BelongToUser',
                    search: false,
                    align: 'center',
                    formatter: function (cellvalue, options, rowObject) {
                        return jqGridHelper.styleLabel(cellvalue, true, "<i class='fa fa-check'></i>", "");
                    }
                },
                {
                    name: 'IsCompanyAdministrator',
                    index: 'IsCompanyAdministrator',
                    search: false,
                    align: 'center',
                    formatter: function (cellvalue, options, rowObject) {
                        return jqGridHelper.styleLabel(cellvalue, true, "<i class='fa fa-check'></i>", "");
                    }
                },
                { name: 'Company', index: 'Company' },
                { name: 'FirstName', index: 'FirstName', hidden: true },
                { name: 'LastName', index: 'LastName', hidden: true },
                { name: 'Department', index: 'Department', hidden: true },
                { name: 'AddressLine1', index: 'AddressLine1', hidden: true },
                { name: 'AddressLine2', index: 'AddressLine2', hidden: true },
                { name: 'Suburb', index: 'Suburb', hidden: true },
                { name: 'State', index: 'State', hidden: true },
                { name: 'Postcode', index: 'Postcode', hidden: true },
                { name: 'Country', index: 'Country', hidden: true },
                { name: 'PostalAddressLine1', index: 'PostalAddressLine1', hidden: true },
                { name: 'PostalAddressLine2', index: 'PostalAddressLine2', hidden: true },
                { name: 'PostalSuburb', index: 'PostalSuburb', hidden: true },
                { name: 'PostalState', index: 'PostalState', hidden: true },
                { name: 'PostalPostcode', index: 'PostalPostcode', hidden: true },
                { name: 'PostalCountry', index: 'PostalCountry', hidden: true },
                { name: 'PreferredPhoneNumber', index: 'PreferredPhoneNumber' },
                { name: 'PhoneWork', index: 'PhoneWork' },
                { name: 'PhoneHome', index: 'PhoneHome' },
                { name: 'Fax', index: 'Fax', hidden: true },
                { name: 'Occupation', index: 'Occupation', hidden: true },
                { name: 'Website', index: 'Website', hidden: true },
                {
                    name: 'Sex',
                    index: 'Sex',
                    align: "center",
                    hidden: true,
                    formatter: function (cellvalue, options, rowObject) {
                        return jqGridHelper.styleLabel(cellvalue, true, "Male", "Female");
                    }
                },
                { name: 'DateOfBirth', index: 'DateOfBirth', hidden: true, sorttype: "datetime", search: false, formatter: function (cellValue, options, rowObject) { return jqGridHelper.printLocalDateTimeFormat(cellValue); } },
                {
                    name: 'DontSendMarketing',
                    index: 'DontSendMarketing',
                    search: false,
                    hidden: true,
                    align: 'center',
                    formatter: function (cellvalue, options, rowObject) {
                        return jqGridHelper.styleLabel(cellvalue, true, "<i class='fa fa-check'></i>", "");
                    }
                },
                {
                    name: 'Unsubscribed',
                    index: 'Unsubscribed',
                    search: false,
                    hidden: true,
                    align: 'center',
                    formatter: function (cellvalue, options, rowObject) {
                        return jqGridHelper.styleLabel(cellvalue, true, "<i class='fa fa-check'></i>", "");
                    }
                },
                { name: 'UnsubscribeDateTime', index: 'UnsubscribeDateTime', hidden: true, sorttype: "datetime", search: false, formatter: function (cellValue, options, rowObject) { return jqGridHelper.printLocalDateTimeFormat(cellValue); } },
                {
                    name: 'SubscriptionType',
                    index: 'SubscriptionType',
                    search: false,
                    hidden: true,
                    align: 'center',
                    formatter: function (cellvalue, options, rowObject) {
                        return jqGridHelper.styleLabel(cellvalue, '1', "Midnight", "Instantly");
                    }
                },
                {
                    name: 'Confirmed',
                    index: 'Confirmed',
                    search: false,
                    hidden: true,
                    align: 'center',
                    formatter: function (cellvalue, options, rowObject) {
                        return jqGridHelper.styleLabel(cellvalue, true, "<i class='fa fa-check'></i>", "");
                    }
                },
                { name: 'ConfirmDateTime', index: 'ConfirmDateTime', hidden: true, sorttype: "datetime", search: false, formatter: function (cellValue, options, rowObject) { return jqGridHelper.printLocalDateTimeFormat(cellValue); } },
                { name: 'FromIPAddress', index: 'FromIPAddress', hidden: true },
                { name: 'ValidatedOk', index: 'ValidatedOk', hidden: true },
                { name: 'ValidateLevel', index: 'ValidateLevel', hidden: true },
                { name: 'CRMID', index: 'CRMID', hidden: true },
                { name: 'SalesPerson', index: 'SalesPerson', hidden: true },
                { name: 'UnsubscribedIssueId', index: 'UnsubscribedIssueId', hidden: true },
                { name: 'Facebook', index: 'Facebook', hidden: true },
                { name: 'Twitter', index: 'Twitter', hidden: true },
                { name: 'LinkedIn', index: 'LinkedIn', hidden: true },
                {
                    name: 'Active',
                    index: 'Active',
                    align: "center",
                    hidden: true,
                    formatter: function (cellvalue, options, rowObject) {
                        return jqGridHelper.styleLabel(cellvalue, true, "<i class='fa fa-check'></i>", "");
                    }
                },
                { name: 'Created', index: 'Created', hidden: true, sorttype: "datetime", search: false, formatter: function (cellValue, options, rowObject) { return jqGridHelper.printLocalDateTimeFormat(cellValue); } },
                { name: 'CreatedBy', index: 'CreatedBy', hidden: true },
                { name: 'LastUpdate', index: 'LastUpdate', sorttype: "datetime", search: false, formatter: function (cellValue, options, rowObject) { return jqGridHelper.printLocalDateTimeFormat(cellValue); } },
                { name: 'LastUpdateBy', index: 'LastUpdateBy' }
            ],
            viewrecords: true,
            subGrid: true,
            subGridRowExpanded: function (subgridId, rowId) {
                jqGridHelper.showLoading();
                siteHelper.httpPost({
                    showLoading: false,
                    url: "@Url.Action("GetContactDetails", "Contacts")/" + rowId,
                    type: "POST",
                    success: function (response) {
                        jqGridHelper.hideLoading();
                        $("#" + subgridId).append(response);
                    }
                });
            }
        };

        jqGridHelper.setupGrid(gridSelector, pagerSelector, gridOptions, gridSettings, navButtonsSetup, "@Url.Action("Exports")");
    </script>

    <script type="text/javascript">
        var searchData = {};

        $('#btnSearch').click(function () {
            searchData = collectData(searchData);

            var filters = jqGridHelper.addPostDataFilters("AND");
            var data = { filters: JSON.stringify(filters) };
            $.extend(data, searchData);

            jqGridHelper.manualSearch(gridSelector, filters, data);
        });

        $('#btnClear').click(function () {
            clearSearchFilter();

            $("#btnSearch").click();
        });

        $(".search-input").keypress(function (e) {
            if (e.which == 13) {
                $("#btnSearch").click();
            }
        });

        //Add current search contacts to group
        function addToGroup() {
            siteHelper.showPopup({
                href: '@Url.Action("AddToGroup", "ContactGroups")' + '?' + $.param(searchData),
                type: 'iframe',
                width: '50%',
                height: 334
            });
        }
    </script>
}
