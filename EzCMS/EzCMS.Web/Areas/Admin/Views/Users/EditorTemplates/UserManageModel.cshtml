@model EzCMS.Core.Models.Users.UserManageModel

@{
    Style.Block(
        @<style type="text/css">
             #mapCanvas {
                 width: 100%;
                 height: 300px;
             }
        </style>);
}

@Html.HiddenFor(m => m.Id)
<div class="tabbable">
    <ul class="nav nav-tabs padding-16">
        <li class="active">
            <a data-toggle="tab" href="#edit-basic">
                <i class="green fa fa-edit bigger-125"></i>
                @T("User_Text_BasicInfo")
            </a>
        </li>
        @if (Model.Id.HasValue)
        {
            <li>
                <a data-toggle="tab" href="#change-password">
                    <i class="blue fa fa-key bigger-125"></i>
                    @T("User_Text_ChangePassword")
                </a>
            </li>
        }
        <li>
            <a data-toggle="tab" href="#edit-settings">
                <i class="purple fa fa-cog bigger-125"></i>
                @T("User_Text_Settings")
            </a>
        </li>
    </ul>

    <div class="tab-content padding-32">
        <div id="edit-basic" class="tab-pane in active">
            <h4 class="header blue bolder smaller">@T("User_Text_GeneralInformation")</h4>
            <div class="form-group">
                @Html.LocalizeLabelFor(m => m.Email, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    <span class="input-icon input-icon-right col-sm-10 col-xs-12 no-padding">
                        @if (Model.Id.HasValue)
                        {
                            @Html.TextBoxFor(m => m.Email, new { @readonly = "true", @class = "col-xs-12" })
                        }
                        else
                        {
                            @Html.TextBoxFor(m => m.Email, new { placeholder = T("User_Text_EmailPlaceHolder"), @class = "col-xs-12" })
                        }
                        <i class="ace-icon fa fa-envelope"></i>
                    </span>
                    @Html.HelpTextFor(m => m.Email, new { @class = "help-button" })
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
            </div>
            <div class="form-group">
                @Html.LocalizeLabelFor(m => m.Username, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    <span class="input-icon input-icon-right col-sm-10 col-xs-12 no-padding">
                        @if (Model.Id.HasValue)
                        {
                            @Html.TextBoxFor(m => m.Username, new { @readonly = "true", @class = "col-xs-12" })
                        }
                        else
                        {
                            @Html.TextBoxFor(m => m.Username, new { placeholder = T("User_Text_UsernamePlaceHolder"), @class = "col-xs-12" })
                        }
                        <i class="ace-icon fa fa-user"></i>
                    </span>
                    @Html.HelpTextFor(m => m.Username, new { @class = "help-button" })
                    @Html.ValidationMessageFor(m => m.Username)
                </div>
            </div>
            <div class="form-group">
                @Html.LocalizeLabelFor(m => m.FirstName, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    <span class="input-icon input-icon-right col-sm-10 col-xs-12 no-padding">
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "col-xs-12", placeholder = T("User_Text_FirstNamePlaceHolder") })
                        <i class="ace-icon fa fa-user"></i>
                    </span>
                    @Html.HelpTextFor(m => m.FirstName, new { @class = "help-button" })
                    @Html.ValidationMessageFor(m => m.FirstName)
                </div>
            </div>
            <div class="form-group">
                @Html.LocalizeLabelFor(m => m.LastName, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    <span class="input-icon input-icon-right col-sm-10 col-xs-12 no-padding">
                        @Html.TextBoxFor(m => m.LastName, new { @class = "col-xs-12", placeholder = T("User_Text_LastNamePlaceHolder") })
                        <i class="ace-icon fa fa-user"></i>
                    </span>
                    @Html.HelpTextFor(m => m.LastName, new { @class = "help-button" })
                    @Html.ValidationMessageFor(m => m.LastName)
                </div>
            </div>
            @if (!Model.Id.HasValue)
            {
                <div class="form-group">
                    @Html.LocalizeLabelFor(m => m.Password, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        <span class="input-icon input-icon-right">
                            @Html.PasswordFor(m => m.Password, new { @class = "input-xlarge" })
                            <i class="ace-icon fa fa-lock"></i>
                        </span>
                        @Html.HelpTextFor(m => m.Password, new { @class = "help-button" })
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LocalizeLabelFor(m => m.ConfirmPassword, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        <span class="input-icon input-icon-right">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input-xlarge" })
                            <i class="ace-icon fa fa-lock"></i>
                        </span>
                        @Html.HelpTextFor(m => m.ConfirmPassword, new { @class = "help-button" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LocalizeLabelFor(m => m.ChangePasswordAfterLogin, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.AceCheckBoxFor(m => m.ChangePasswordAfterLogin)
                        @Html.HelpTextFor(m => m.ChangePasswordAfterLogin, new { @class = "help-button" })
                        @Html.ValidationMessageFor(m => m.ChangePasswordAfterLogin)
                    </div>
                </div>
            }
            <h4 class="header blue bolder smaller">@T("User_Text_RoleInformation")</h4>
            <div class="form-group">
                @Html.LocalizeLabelFor(m => m.IsRemoteAccount, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.AceCheckBoxFor(m => m.IsRemoteAccount, false, new { disabled = "disabled" })
                    @Html.HelpTextFor(m => m.IsRemoteAccount, new { @class = "help-button" })
                </div>
            </div>
            <div class="form-group">
                @Html.LocalizeLabelFor(m => m.Status, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.DropDownListFor(m => m.Status, Model.StatusList, new { @class = "single-select-no-search col-xs-10" })
                    @Html.HelpTextFor(m => m.Status, new { @class = "help-button" })
                    @Html.ValidationMessageFor(m => m.Status)
                </div>
            </div>
            @if (CurrentUser.IsSystemAdministrator)
            {
                <div class="form-group">
                    @Html.LocalizeLabelFor(m => m.IsSystemAdministrator, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.AceCheckBoxFor(m => m.IsSystemAdministrator, false, new { id = "isSystemAdministrator" })
                        @Html.HelpTextFor(m => m.Status, new { @class = "help-button" })
                        @Html.ValidationMessageFor(m => m.Status)
                    </div>
                </div>
            }
            <div class="form-group">
                @Html.LocalizeLabelFor(m => m.UserGroupIds, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (Model.IsRemoteAccount || Model.IsSystemAdministrator)
                    {
                        @Html.ListBoxFor(m => m.UserGroupIds, Model.UserGroups, new { id = "UserGroupIds", @class = "col-xs-10 multi-select", multiple = "multiple", disabled = "disabled", placeholder = T("User_Text_SelectUserGroups") })
                    }
                    else
                    {
                        @Html.ListBoxFor(m => m.UserGroupIds, Model.UserGroups, new { id = "UserGroupIds", @class = "col-xs-10 multi-select", multiple = "multiple", placeholder = T("User_Text_SelectUserGroups") })
                    }

                    @Html.HelpTextFor(m => m.UserGroupIds, new { @class = "help-button" })
                    @Html.ValidationMessageFor(m => m.UserGroupIds)
                </div>
            </div>
            <h4 class="header blue bolder smaller">@T("User_Text_Social")</h4>
            <div class="form-group">
                @Html.LocalizeLabelFor(m => m.Facebook, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    <span class="input-icon">
                        @Html.TextBoxFor(m => m.Facebook)
                        <i class="ace-icon fa fa-facebook blue"></i>
                    </span>
                    @Html.HelpTextFor(m => m.Facebook, new { @class = "help-button" })
                    @Html.ValidationMessageFor(m => m.Facebook)
                </div>
            </div>
            <div class="form-group">
                @Html.LocalizeLabelFor(m => m.Twitter, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    <span class="input-icon">
                        @Html.TextBoxFor(m => m.Twitter)
                        <i class="ace-icon fa fa-twitter light-blue"></i>
                    </span>
                    @Html.HelpTextFor(m => m.Twitter, new { @class = "help-button" })
                    @Html.ValidationMessageFor(m => m.Twitter)
                </div>
            </div>
            <div class="form-group">
                @Html.LocalizeLabelFor(m => m.LinkedIn, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    <span class="input-icon">
                        @Html.TextBoxFor(m => m.LinkedIn)
                        <i class="ace-icon fa fa-linkedin blue"></i>
                    </span>
                    @Html.HelpTextFor(m => m.LinkedIn, new { @class = "help-button" })
                    @Html.ValidationMessageFor(m => m.LinkedIn)
                </div>
            </div>
            <h4 class="header blue bolder smaller">@T("User_Text_OtherInformation")</h4>
            <div class="form-group">
                @Html.LocalizeLabelFor(m => m.Phone, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    <span class="input-icon input-icon-right">
                        @Html.TextBoxFor(m => m.Phone, new { @class = "phone-input" })
                        <i class="ace-icon fa fa-phone"></i>
                    </span>
                    @Html.HelpTextFor(m => m.Phone, new { @class = "help-button" })
                    @Html.ValidationMessageFor(m => m.Phone)
                </div>
            </div>
            <div class="form-group">
                @Html.LocalizeLabelTimeFor(m => m.DateOfBirth, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    <div class="input-medium">
                        <div class="input-group">
                            @Html.TextBoxFor(m => m.DateOfBirth, new { @Value = ToLocalDateTime(Model.DateOfBirth).ToDateFormat(), @class = "input-medium date-picker" })
                            <span class="input-group-addon">
                                <i class="ace-icon fa fa-calendar"></i>
                            </span>
                            @Html.HelpTextFor(m => m.DateOfBirth, new { @class = "help-button" })
                        </div>
                        @Html.ValidationMessageFor(m => m.DateOfBirth)
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LocalizeLabelFor(m => m.Gender, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @foreach (var item in Model.Genders)
                    {
                        <label class="inline control-value" style="margin-right: 10px">
                            <input name="Gender" value="@item" type="radio" class="ace" @(Model.Gender == item ? "Checked" : "") />
                            <span class="lbl">&nbsp; @item.GetEnumName()</span>
                        </label>
                    }
                    @Html.HelpTextFor(m => m.Gender, new { @class = "help-button" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-3 control-label no-padding-top">
                    @Html.LocalizeLabelFor(m => m.Address)
                    @Html.HelpTextFor(m => m.Address, new { @class = "help-button" })
                </div>
                <div class="col-sm-9">
                    <div class="col-xs-12 no-padding">
                        @Html.TextBoxFor(m => m.Address, new { id = "address-input", @class = "controls", onkeypress = "noEnter(event)", placeholder = T("User_Text_AddressPlaceHolder") })
                        <div id="mapCanvas"></div>
                    </div>
                    @Html.ValidationMessageFor(m => m.Address)
                </div>
            </div>
            <div class="form-group">
                @Html.LocalizeLabelFor(m => m.About, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextAreaFor(m => m.About, new { @class = "col-xs-10" })
                    @Html.HelpTextFor(m => m.About, new { @class = "help-button" })
                    @Html.ValidationMessageFor(m => m.About)
                </div>
            </div>
        </div>

        @if (Model.Id.HasValue)
        {
            <div id="change-password" class="tab-pane">
                <div class="form-group">
                    @Html.LocalizeLabelFor(m => m.Password, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        <span class="input-icon input-icon-right">
                            @Html.PasswordFor(m => m.Password, new { @class = "input-xlarge" })
                            <i class="ace-icon fa fa-lock"></i>
                        </span>
                        @Html.HelpTextFor(m => m.Password, new { @class = "help-button" })
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LocalizeLabelFor(m => m.ConfirmPassword, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        <span class="input-icon input-icon-right">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input-xlarge" })
                            <i class="ace-icon fa fa-lock"></i>
                        </span>
                        @Html.HelpTextFor(m => m.ConfirmPassword, new { @class = "help-button" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LocalizeLabelFor(m => m.ChangePasswordAfterLogin, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.AceCheckBoxFor(m => m.ChangePasswordAfterLogin)
                        @Html.HelpTextFor(m => m.ChangePasswordAfterLogin, new { @class = "help-button" })
                        @Html.ValidationMessageFor(m => m.ChangePasswordAfterLogin)
                    </div>
                </div>
            </div>
        }

        <div id="edit-settings" class="tab-pane">
            <div class="tabbable tabs-left">
                <div class="space"></div>
                <div class="form-group">
                    @Html.LocalizeLabelFor(m => m.ManageSettingModel.AdminPageSize, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.ManageSettingModel.AdminPageSize, new { @class = "input-number" })
                        @Html.HelpTextFor(m => m.ManageSettingModel.AdminPageSize, new { @class = "help-button" })
                        @Html.ValidationMessageFor(m => m.ManageSettingModel.AdminPageSize)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LocalizeLabelFor(m => m.ManageSettingModel.TimeZone, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        <div class="col-xs-10 no-padding">
                            @Html.DropDownListFor(m => m.ManageSettingModel.TimeZone, Model.ManageSettingModel.TimeZones, new { @class = "single-select col-xs-10" })
                        </div>
                        @Html.HelpTextFor(m => m.ManageSettingModel.TimeZone, new { @class = "help-button" })
                        @Html.ValidationMessageFor(m => m.ManageSettingModel.TimeZone)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LocalizeLabelFor(m => m.ManageSettingModel.Culture, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.DropDownListFor(m => m.ManageSettingModel.Culture, Model.ManageSettingModel.Cultures, new { @class = "single-select col-xs-10" })
                        @Html.HelpTextFor(m => m.ManageSettingModel.Culture, new { @class = "help-button" })
                        @Html.ValidationMessageFor(m => m.ManageSettingModel.Culture)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="clear"></div>
<div class="clearfix form-actions">
    @Html.Partial("Partials/_SubmitButtons", Model.Id.HasValue)
</div>

@{
    Script.Include(@Html.GoogleMapFile(WorkContext.CurrentCulture, "places"), "~/Scripts/Shared/Initialize/googleMapApi.js").Block(@<script type="text/javascript">

        $("#isSystemAdministrator").change(function () {
            var isRemoteAccount = "@Model.IsRemoteAccount" == "True";
            if (!isRemoteAccount) {

                if ($(this).is(":checked")) {
                    $("#UserGroupIds").attr("disabled", "disabled");
                    $("#UserGroupIds").select2("data", []);
                }
                else {
                    $("#UserGroupIds").removeAttr("disabled");
                }
            }
        });
    </script>);
}
