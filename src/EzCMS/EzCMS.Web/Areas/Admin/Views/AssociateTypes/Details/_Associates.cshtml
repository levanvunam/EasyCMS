@model int

<div id="grid-buttons" class="col-xs-12">
    <a href="javascript:void(0)" class="create-associate btn btn-yellow btn-minier">
        <i class="fa fa-plus bigger-125"></i>
        @T("Associate_Text_Create")
    </a>
    @Html.Partial("Partials/_ExportButtonsExcludeExportAll", "Associate")
</div>

<div class="col-xs-12">
    <table id="associate-grid-table"></table>
    <div id="associate-grid-pager"></div>
</div>
<div class="clear"></div>

@{
    Script.Block(@<script type="text/javascript">

        // Create associate
        $(".create-associate").click(function () {
            siteHelper.showPopup({
                href: "@Url.Action("PopupCreate", "Associates", new { associateTypeId = Model })",
                type: 'iframe',
                width: '100%'
            }, function () {
                if ($dirty == true) {
                    jqGridHelper.reloadGrid(associateGrid);
                }
            });
        });

        // Edit associate
        function editAssociate(id) {
            siteHelper.showPopup({
                href: "@Url.Action("PopupEdit", "Associates")/" + id,
                type: 'iframe',
                width: '100%',
            }, function () {
                if ($dirty == true) {
                    jqGridHelper.reloadGrid(associateGrid);
                }
            });
        }

        // Delete associate - associate type mapping
        function deleteAssociateAssociateTypeMapping(associateId) {
            var data = { associateId: associateId, associateTypeId: @Model };
            siteHelper.confirm('@T("AssociateAssociateType_Message_DeleteMappingConfirm")', function (ok) {
                if (ok) {
                    siteHelper.httpPost({
                        url: "@Url.Action("DeleteAssociateAssociateTypeMapping", "AssociateTypes")",
                        data: data,
                        success: function (response) {
                            siteHelper.showMessage(response);
                            if (response.Success) {
                                jqGridHelper.reloadGrid(associateGrid);
                            }
                        }
                    });
                }
            });
        }

        /*
         * Setup grid
         */
        var $dirty = false;
        var associateGrid = "#associate-grid-table";
        var associateGridPager = "#associate-grid-pager";
        var associateTab = "#associates";
        var associateGridSettings = $.parseJSON('@Html.Action("GetGridSettings", "Account", new { name = "Associate" })');
        var associateExportUrl = "@Url.Action("Exports", "Associates", new { AssociateTypeIds = Model })";

        $(function($) {
            var gridOptions = {
                url: "@Url.Action("_AjaxBinding", "Associates", new { AssociateTypeIds = Model })",
                colNames: ['', '@T("Associate_Field_Id")',
                    '@T("Associate_Field_FirstName")',
                    '@T("Associate_Field_LastName")',
                    '@T("Associate_Field_Email")',
                    '@T("Associate_Field_Title")',
                    '@T("Associate_Field_JobTitle")',
                    '@T("Associate_Field_AddressLine1")',
                    '@T("Associate_Field_AddressLine2")',
                    '@T("Associate_Field_Suburb")',
                    '@T("Associate_Field_State")',
                    '@T("Associate_Field_Postcode")',
                    '@T("Associate_Field_Country")',
                    '@T("Associate_Field_PhoneWork")',
                    '@T("Associate_Field_PhoneHome")',
                    '@T("Associate_Field_MobilePhone")',
                    '@T("Associate_Field_Fax")',
                    '@LabelForTime(T("Associate_Field_Created"))',
                    '@T("Associate_Field_CreatedBy")',
                    '@LabelForTime(T("Associate_Field_LastUpdate"))',
                    '@T("Associate_Field_LastUpdateBy")'
                ],
                colModel: [
                    {
                        name: 'Actions',
                        hidedlg: true,
                        width: 120,
                        fixed: true,
                        sortable: false,
                        search: false,
                        align: "center",
                        formatter: function(cellvalue, options, rowObject) {
                            var editIcon = "<a class='grid-action' href='javascript:editAssociate(" + options.rowId + ")'><div class='ui-pg-div' title='@T("System_Text_Edit")'><span class='fa fa-edit'></span></div></a>";
                            var detailsIcon = "<a class='grid-action' href='@Url.Action("Details","Associates")/" + options.rowId + "'><div class='ui-pg-div' title='@T("System_Text_ViewDetails")'><span class='fa fa-search-plus'></span></div></a>";

                            // Delete associate - associate type mapping
                            var deleteRelationshipIcon = "<a class='grid-action' href='javascript:deleteAssociateAssociateTypeMapping(" + options.rowId + ")'><div class='ui-pg-div' title='@T("AssociateAssociateType_Text_Delete")'><span class='fa fa-chain-broken'></span></div></a>";

                            //Delete associate
                            var returnUrl = "@Url.Action("Details", new { id = Model })";
                            var deleteIcon = "<a class='grid-action' href='@Url.Action("Details", "Associates")/" + options.rowId + "?action=delete&returnUrl=" + returnUrl + "'><div class='ui-pg-div'title='@T("System_Text_Delete")'><span class='fa fa-times red'></span></div></a>";

                            return editIcon + detailsIcon + deleteRelationshipIcon + deleteIcon;
                        }
                    },
                    { name: 'Id', index: 'Id', key: true, width: 60, fixed: true, align: 'center', sorttype: "int", searchoptions: { sopt: ['eq'] } },
                    { name: 'Title', index: 'Title', hidden: true },
                    { name: 'FirstName', index: 'FirstName' },
                    { name: 'LastName', index: 'LastName' },
                    { name: 'Email', index: 'Email' },
                    { name: 'JobTitle', index: 'JobTitle' },
                    { name: 'AddressLine1', index: 'AddressLine1' },
                    { name: 'AddressLine2', index: 'AddressLine2', hidden: true },
                    { name: 'Suburb', index: 'Suburb' },
                    { name: 'State', index: 'State' },
                    { name: 'Postcode', index: 'Postcode' },
                    { name: 'Country', index: 'Country' },
                    { name: 'PhoneWork', index: 'PhoneWork', hidden: true },
                    { name: 'PhoneHome', index: 'PhoneHome', hidden: true },
                    { name: 'MobilePhone', index: 'MobilePhone', hidden: true },
                    { name: 'Fax', index: 'Fax', hidden: true },
                    { name: 'Created', index: 'Created', hidden: true, sorttype: "datetime", search: false, formatter: function(cellValue, options, rowObject) { return jqGridHelper.printLocalDateTimeFormat(cellValue); } },
                    { name: 'CreatedBy', index: 'CreatedBy', hidden: true },
                    { name: 'LastUpdate', index: 'LastUpdate', sorttype: "datetime", search: false, formatter: function(cellValue, options, rowObject) { return jqGridHelper.printLocalDateTimeFormat(cellValue); } },
                    { name: 'LastUpdateBy', index: 'LastUpdateBy' }
                ],
                loadComplete: function(response) {
                    $(".create-associate.tab-add-button").data("total", response.records).html(response.records);
                }
            };

            jqGridHelper.setupTabGrid(associateGrid, associateGridPager, gridOptions, associateGridSettings, associateTab, associateExportUrl, "Associate");
        });
    </script>);
}