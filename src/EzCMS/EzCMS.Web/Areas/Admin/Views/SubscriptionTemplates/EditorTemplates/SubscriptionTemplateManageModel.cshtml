@model EzCMS.Core.Models.SubscriptionTemplates.SubscriptionTemplateManageModel

@Html.HiddenFor(m => m.Id)
<div class="form-horizontal">
    <div class="col-xs-12">
        <div class="form-group">
            @Html.LocalizeLabelFor(m => m.Name, new { @class = "col-sm-2 control-label align-right" })
            <div class="col-sm-10 col-xs-12 control-value">
                @Model.Name
            </div>
        </div>
        <div class="form-group">
            @Html.LocalizeLabelFor(m => m.Module, new { @class = "col-sm-2 control-label align-right" })
            <div class="col-sm-10 col-xs-12 control-value">
                @Model.Module.ToString()
            </div>
        </div>
        <div class="form-group">
            @Html.LocalizeLabelFor(m => m.Body, new { @class = "col-sm-2 control-label align-right" })
            <div class="col-xs-10">
                <div class="btn-group">
                    <a id="btnPreview" href="#preview" class="btn btn-xs btn-primary">Preview</a>
                    <button class="btn btn-xs btn-info dropdown-toggle" data-toggle="dropdown">
                        @T("Widget_Text_AddProperty")
                        <span class="fa fa-angle-down icon-on-right bigger-110"></span>
                    </button>
                    <ul id="propertyBuilder" class="dropdown-menu dropdown-info"></ul>
                    <div id="preview">
                    </div>
                </div>
            </div>
            <div class="col-xs-12">
                <div class="col-sm-offset-2 col-xs-9 no-padding">
                    @Html.TextAreaFor(m => m.Body, new { id = "SubscriptionBody", @class = "col-xs-12" })
                </div>
                @Html.HelpTextFor(m => m.Body, new { @class = "help-button" })
                @Html.ValidationMessageFor(m => m.Body)
            </div>
        </div>
    </div>
</div>
<div class="clearfix form-actions">
    @Html.Partial("Partials/_SubmitButtons", Model.Id.HasValue)
</div>

@{
    Script.Bundle("~/js/codemirror").Block(@<script type="text/javascript">
        var Editor;
        $(function () {
            Editor = siteHelper.buildHtmlEditor("SubscriptionBody");
            GeneratePropertyDropdown();

            $("#btnPreview").fancybox({
                maxWidth: 800,
                maxHeight: 600,
                fitToView: false,
                width: '70%',
                height: '70%'
            });

            $("#btnPreview").click(function () {
                $("#preview").html(Editor.getValue());
            });

            siteHelper.disableClickEvent('#preview');
        });

        function GeneratePropertyDropdown() {
            siteHelper.httpPost({
                showLoading: false,
                type: "POST",
                url: "@Url.Action("GeneratePropertyDropdown")" + "?module=@Model.Id",
                async: false,
                success: function (response) {
                    if (response.Success) {
                        $("#propertyBuilder").html(response.Data);
                    } else {
                        siteHelper.showMessage(response);
                    }
                }
            });
        }

        var callback = function printCurlybracket(text) {
            Editor.replaceRange(text, Editor.getCursor());
        };
    </script>)
    ;
}
