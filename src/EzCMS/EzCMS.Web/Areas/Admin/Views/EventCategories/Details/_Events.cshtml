@model int

<div id="grid-buttons" class="col-xs-12">
    @Html.Partial("Partials/_ExportButtonsExcludeExportAll", "Event")
</div>
<div class="col-xs-12">
    <table id="event-grid-table"></table>
    <div id="event-grid-pager"></div>
</div>
<div class="clear"></div>

@{
    Script.Block(@<script type="text/javascript">

        //Edit event
        function editEvent(id) {
            siteHelper.showPopup({
                href: "@Url.Action("PopupEdit", "Events")/" + id,
                type: 'iframe',
                width: '90%',
            }, function () {
                if ($dirty == true) {
                    jqGridHelper.reloadGrid(eventGrid);
                }
            });
        }

        // Delete event - event category mapping
        function deleteEventEventCategoryMapping(eventId) {
            var data = { eventId: eventId, categoryId: '@Model' };

            siteHelper.confirm('@T("EventEventCategory_Message_DeleteMappingConfirm")', function (ok) {
                if (ok) {
                    siteHelper.httpPost({
                        url: "@Url.Action("DeleteEventEventCategoryMapping", "EventCategories")",
                        data: data,
                        success: function (response) {
                            siteHelper.showMessage(response);
                            if (response.Success) {
                                jqGridHelper.reloadGrid(eventGrid);
                            }
                        }
                    });
                }
            });
        }

        /*
         * Setup grid
         */
        var $dirty = false;
        var eventGrid = "#event-grid-table";
        var eventGridPager = "#event-grid-pager";
        var eventTab = "#events";
        var eventGridSettings = $.parseJSON('@Html.Action("GetGridSettings", "Account", new { name = "Event" })');
        var eventExportUrl = "@Url.Action("Exports", "Events", new { eventCategoryId = Model })";

        $(function() {
            var gridOptions = {
                url: "@Url.Action("_AjaxBinding", "Events", new { eventCategoryId = Model })",
                colNames: ['', '@T("Event_Field_Id")',
                    '@T("Event_Field_Title")',
                    '@T("Event_Field_EventSummary")',
                    '@T("Event_Field_EventDescription")',
                    '@T("Event_Field_MaxAttendees")',
                    '@T("Event_Field_RegistrationFullText")',
                    '@T("Event_Field_RegistrationWaiver")',
                    '@LabelForTime(T("Event_Field_UpcomingDate"))',
                    '@LabelForTime(T("Event_Field_Created"))',
                    '@T("Event_Field_CreatedBy")',
                    '@LabelForTime(T("Event_Field_LastUpdate"))',
                    '@T("Event_Field_LastUpdateBy")'
                ],
                colModel: [
                    {
                        name: 'Actions',
                        hidedlg: true,
                        width: 120,
                        fixed: true,
                        sortable: false,
                        search: false,
                        align: "center",
                        formatter: function(cellvalue, options, rowObject) {
                            var editIcon = "<a class='grid-action' href='javascript:editEvent(" + options.rowId + ")'><div class='ui-pg-div' title='@T("System_Text_Edit")'><span class='fa fa-edit'></span></div></a>";
                            var detailsIcon = "<a class='grid-action' href='@Url.Action("Details","Events")/" + options.rowId + "'><div class='ui-pg-div' title='@T("System_Text_ViewDetails")'><span class='fa fa-search-plus'></span></div></a>";

                            // Delete event - event category mapping
                            var deleteRelationshipIcon = "<a class='grid-action' href='javascript:deleteEventEventCategoryMapping(" + options.rowId + ")'><div class='ui-pg-div' title='@T("EventEventCategory_Text_Delete")'><span class='fa fa-chain-broken'></span></div></a>";

                            // Delete event icon
                            var returnUrl = "@Url.Action("Details", new { id = Model })";
                            var deleteIcon = "<a class='grid-action' href='@Url.Action("Details", "Events")/" + options.rowId + "?action=delete&returnUrl=" + returnUrl + "'><div class='ui-pg-div'title='@T("System_Text_Delete")'><span class='fa fa-times red'></span></div></a>";

                            return editIcon + detailsIcon + deleteRelationshipIcon + deleteIcon;
                        }
                    },
                    { name: 'Id', index: 'Id', key: true, width: 60, fixed: true, align: 'center', sorttype: "int", searchoptions: { sopt: ['eq'] } },
                    { name: 'Title', index: 'Title' },
                    { name: 'EventSummary', index: 'EventSummary' },
                    { name: 'EventDescription', index: 'EventDescription', hidden: true },
                    { name: 'MaxAttendees', index: 'MaxAttendees', hidden: true },
                    { name: 'RegistrationFullText', index: 'RegistrationFullText', hidden: true },
                    { name: 'RegistrationWaiver', index: 'RegistrationWaiver', hidden: true },
                    { name: 'UpcomingDate', index: 'UpcomingDate', sorttype: "datetime", search: false, formatter: function(cellValue, options, rowObject) { return jqGridHelper.printLocalDateTimeFormat(cellValue); } },
                    { name: 'Created', index: 'Created', hidden: true, sorttype: "datetime", search: false, formatter: function(cellValue, options, rowObject) { return jqGridHelper.printLocalDateTimeFormat(cellValue); } },
                    { name: 'CreatedBy', index: 'CreatedBy', hidden: true },
                    { name: 'LastUpdate', index: 'LastUpdate', sorttype: "datetime", search: false, formatter: function(cellValue, options, rowObject) { return jqGridHelper.printLocalDateTimeFormat(cellValue); } },
                    { name: 'LastUpdateBy', index: 'LastUpdateBy' }
                ],
                loadComplete: function(response) {
                    $("#tab-event").data("total", response.records).html(response.records);
                }
            };

            jqGridHelper.setupTabGrid(eventGrid, eventGridPager, gridOptions, eventGridSettings, eventTab, eventExportUrl, "Event");
        });
    </script>);
}