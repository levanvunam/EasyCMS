@model int

<div id="grid-buttons" class="col-xs-12">
    @Html.Partial("Partials/_ExportButtonsExcludeExportAll", "UserGroup")
</div>
<div class="col-xs-12">
    <table id="user-group-grid-table"></table>
    <div id="user-group-grid-pager"></div>
</div>
<div class="clear"></div>

@{
    Script.Block(@<script type="text/javascript">

        // Edit user group
        function editUserGroup(id) {
            siteHelper.showPopup({
                href: "@Url.Action("PopupEdit", "UserGroups")/" + id,
                type: 'iframe',
                width: '60%',
            }, function () {
                if ($dirty == true) {
                    jqGridHelper.reloadGrid(userGroupGrid);
                }
            });
        }

        //Delete user - user group mapping
        function deleteUsersUserGroupMapping(userGroupId) {
            var data = { userId: @Model, userGroupId: userGroupId };

            siteHelper.confirm('@T("UserUserGroup_Message_DeleteMappingConfirm")', function (ok) {
                if (ok) {
                    siteHelper.httpPost({
                        url: '@Url.Action("DeleteUserUserGroupMapping", "Users")',
                        data: data,
                        success: function (response) {
                            siteHelper.showMessage(response);
                            if (response.Success) {
                                jqGridHelper.reloadGrid(userGroupGrid);
                            }
                        }
                    });
                }
            });
        }

        /*
         * Setup grid
         */
        var $dirty = false;
        var userGroupGrid = "#user-group-grid-table";
        var userGroupGridPager = "#user-group-grid-pager";
        var userGroupTab = "#user-groups";
        var userGroupGridSettings = $.parseJSON('@Html.Action("GetGridSettings", "Account", new { name = "User Group" })');
        var userGroupExportUrl = "@Url.Action("ExportsUserGroupsOfUser", "UserGroups", new { userId = Model })";

        $(function() {
            var gridOptions = {
                url: "@Url.Action("_AjaxBindingByUser", "UserGroups", new { userId = Model })",
                colNames: ['', '@T("UserGroup_Field_Id")',
                    '@T("UserGroup_Field_Name")',
                    '@T("UserGroup_Field_Description")',
                    '@T("UserGroup_Field_RedirectUrl")',
                    '@T("UserGroup_Field_IsValidUrl")',
                    '@T("UserGroup_Field_ToolbarId")',
                    '@T("UserGroup_Field_Toolbar")',
                    '@T("UserGroup_Field_RecordOrder")',
                    '@LabelForTime(T("UserGroup_Field_Created"))',
                    '@T("UserGroup_Field_CreatedBy")',
                    '@LabelForTime(T("UserGroup_Field_LastUpdate"))',
                    '@T("UserGroup_Field_LastUpdateBy")'],
                colModel: [
                    {
                        name: 'Actions',
                        hidedlg: true,
                        width: 120,
                        fixed: true,
                        sortable: false,
                        search: false,
                        align: "center",
                        formatter: function(cellvalue, options, rowObject) {
                            var editIcon = "<a class='grid-action' href='javascript:editUserGroup(" + options.rowId + ")'><div class='ui-pg-div' title='@T("System_Text_Edit")'><span class='fa fa-edit'></span></div></a>";
                            var detailsIcon = "<a class='grid-action' href='@Url.Action("Details","UserGroups")/" + options.rowId + "'><div class='ui-pg-div' title='@T("System_Text_ViewDetails")'><span class='fa fa-search-plus'></span></div></a>";

                            //Remove toolbar from user group
                            var deleteRelationshipIcon = "<a class='grid-action' href='javascript:deleteUsersUserGroupMapping(" + options.rowId + ")'><div class='ui-pg-div' title='@T("UserUserGroup_Text_Delete")'><span class='fa fa-chain-broken'></span></div></a>";

                            //Delete user group icon
                            var returnUrl = "@Url.Action("Details", new { id = Model })";
                            var deleteIcon = "<a class='grid-action' href='@Url.Action("Details", "UserGroups")/" + options.rowId + "?action=delete&returnUrl=" + returnUrl + "'><div class='ui-pg-div'title='@T("System_Text_Delete")'><span class='fa fa-times red'></span></div></a>";

                            return editIcon + detailsIcon + deleteRelationshipIcon + deleteIcon;
                        }
                    },
                    { name: 'Id', index: 'Id', key: true, width: 60, fixed: true, align: 'center', sorttype: "int", searchoptions: { sopt: ['eq'] } },
                    { name: 'Name', index: 'Name' },
                    { name: 'Description', index: 'Description', hidden: true },
                    {
                        name: 'RedirectUrl',
                        index: 'RedirectUrl',
                        formatter: function(cellvalue, options, rowObject) {
                            return jqGridHelper.formatLink(cellvalue);
                        }
                    },
                    {
                        name: 'IsValidUrl',
                        index: 'IsValidUrl',
                        align: 'center',
                        search: false,
                        formatter: function(cellvalue, options, rowObject) {
                            return jqGridHelper.styleLabel(cellvalue, "@HttpStatusCode.OK", "Valid", cellvalue, "", "label-danger");
                        }
                    },
                    { name: 'ToolbarId', index: 'ToolbarId', hidden: true },
                    {
                        name: 'ToolbarName',
                        index: 'ToolbarName',
                        formatter: function(cellvalue, options, rowObject) {
                            if (rowObject.ToolbarId != null) {
                                return jqGridHelper.formatLink('@Url.Action("Details", "Toolbars")/' + rowObject.ToolbarId, cellvalue, cellvalue, true);
                            }
                            return "";
                        }
                    },
                    { name: 'RecordOrder', index: 'Order', width: 70, fixed: true, align: "center", sorttype: "int", searchoptions: { sopt: ['eq'] }, hidden: true },
                    { name: 'Created', index: 'Created', hidden: true, sorttype: "datetime", search: false, formatter: function(cellValue, options, rowObject) { return jqGridHelper.printLocalDateTimeFormat(cellValue); } },
                    { name: 'CreatedBy', index: 'CreatedBy', hidden: true },
                    { name: 'LastUpdate', index: 'LastUpdate', sorttype: "datetime", search: false, formatter: function(cellValue, options, rowObject) { return jqGridHelper.printLocalDateTimeFormat(cellValue); } },
                    { name: 'LastUpdateBy', index: 'LastUpdateBy' }
                ],
                loadComplete: function(response) {
                    $("#tab-user-group").data("total", response.records).html(response.records);
                }
            };

            jqGridHelper.setupTabGrid(userGroupGrid, userGroupGridPager, gridOptions, userGroupGridSettings, userGroupTab, userGroupExportUrl, "UserGroup");
        });
    </script>);
}
